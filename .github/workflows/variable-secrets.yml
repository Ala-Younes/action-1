# ################### Envirenment Variables On Workflow Level ###################
name: Exploring Variables and Secrets

on:
  workflow_dispatch: 
  # schedule:
  #   - cron: "*/1 * * * *"

env:
  CONTAINER_REGISTRY: docker.io
  IMAGE_NAME: github-actions-nginx

jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
            - name: Docker Build
              run: echo docker build -t ${{env.CONTAINER_REGISTRY}}/${{vars.DOCKER_USERNAME}}/$IMAGE_NAME:latest

            - name: Docker Login 
              run: echo docker login --username=${{vars.DOCKER_USERNAME}}/ --password=${{secrets.DOCKER_PASSWORD}}

            - name: Docker Publish 
              run: echo docker push $CONTAINER_REGISTRY/${{vars.DOCKER_USERNAME}}/$IMAGE_NAME:latest

    deploy:
        needs: docker
        concurrency: 
          group: production-deployement
          cancel-in-progress: false
        runs-on: ubuntu-latest
        steps:
            - name: Docker Run
              run: |
                echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{vars.DOCKER_USERNAME}}/$IMAGE_NAME:latest
                sleep 600s
# jobs:
#     docker:
#         runs-on: ubuntu-latest
#         steps:
#             - name: Docker Build    
#               run: docker build -t docker.io/dockerUsername/imageName:latest

#             - name: Docker Login    
#               run: docker login --username=dockerUsername/ --password=...

#             - name: Docker Publish    
#               run: docker push docker.io/dockerUsername/imageName:latest

#     deploy:
#         needs: docker
#         runs-on: ubuntu-latest
#         steps:
#             - name: Docker Run    
#               run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest

# ################### Envirenment Variables On Step Level ###################
# jobs:
#     docker:
#         runs-on: ubuntu-latest
#         steps:
#             - name: Docker Build
#               env:
#                 CONTAINER_REGISTRY: docker.io
#                 DOCKER_USERNAME: alayounes01
#                 IMAGE_NAME: github-actions-nginx
#               run: echo docker build -t ${{env.CONTAINER_REGISTRY}}/$DOCKER_USERNAME/$IMAGE_NAME:latest

#             - name: Docker Login 
#               env:
#                 DOCKER_PASSWORD: ...  
#                 DOCKER_USERNAME: alayounes01
#               run: docker login --username=$DOCKER_USERNAME/ --password=$DOCKER_PASSWORD

#             - name: Docker Publish 
#               env:
#                 CONTAINER_REGISTRY: docker.io  
#                 DOCKER_USERNAME: alayounes01
#                 IMAGE_NAME: github-actions-nginx   
#               run: docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#     deploy:
#         needs: docker
#         runs-on: ubuntu-latest
#         steps:
#             - name: Docker Run
#               env:
#                 CONTAINER_REGISTRY: docker.io  
#                 DOCKER_USERNAME: alayounes01
#                 IMAGE_NAME: github-actions-nginx    
#               run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

# ################### Envirenment Variables On Job Level ###################
# jobs:
#     docker:
#         env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: alayounes01
#             IMAGE_NAME: github-actions-nginx
#         runs-on: ubuntu-latest
#         steps:
#             - name: Docker Build
#               run: echo docker build -t ${{env.CONTAINER_REGISTRY}}/$DOCKER_USERNAME/$IMAGE_NAME:latest

#             - name: Docker Login 
#               env:
#                 DOCKER_PASSWORD: ..
#               run: docker login --username=$DOCKER_USERNAME/ --password=$DOCKER_PASSWORD

#             - name: Docker Publish 
#               run: docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#     deploy:
#         env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: alayounes01
#             IMAGE_NAME: github-actions-nginx
#         needs: docker
#         runs-on: ubuntu-latest
#         steps:
#             - name: Docker Run
#               run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

